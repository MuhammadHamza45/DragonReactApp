{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlliedC\\\\source\\\\repos\\\\UI\\\\src\\\\Components\\\\PricingPlan\\\\components\\\\PricingPlan.js\";\nimport PropTypes from 'prop-types';\nimport { Button, Image } from 'react-bootstrap';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport AudioImage from '../../../assets/img/audio.png';\nimport '../_pricingplan.scss';\nimport '../pricingplan.css';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PricingPlan = props => {\n  const {\n    detail,\n    planFee,\n    theme,\n    planId,\n    id\n  } = props;\n\n  const _createSubscription = (data, actions) => {\n    return actions.subscription.create({\n      plan_id: planId\n    });\n  };\n\n  const _onApprove = (data, action) => {\n    Swal.fire('Thank You!', 'You have successfully been subscribed to your selected plan.', 'success');\n    axios.post('https://localhost:7067/api/Subscription/saveUserSubscription', { ...data,\n      userId: id\n    }).then(console.log).catch(alert);\n  };\n\n  const _onError = (actions, data) => {\n    Swal.fire('Subscription Failed!', 'You are not subscribed yet to a subscription plan. Please select a plan and try again.', 'error');\n  };\n\n  const _onCancel = (actions, data) => {\n    Swal.fire('Canceled', 'Subscription unexpectedly closed. Please try again to keep enjoying Dragon Camp.', 'error');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pricingplan\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pricingplan__head\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: AudioImage,\n        alt: \"pricingplan\",\n        className: \"fluid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `pricingplan__body ${theme}-bg`,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"benifits\",\n        children: detail.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 51\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"$\", planFee]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pricingplan__btn\",\n      children: planId !== 'FREE' ? /*#__PURE__*/_jsxDEV(PayPalButtons, {\n        fundingSource: \"card\",\n        style: {\n          shape: 'pill',\n          color: 'black',\n          layout: 'vertical',\n          label: 'subscribe'\n        },\n        createSubscription: _createSubscription,\n        onApprove: _onApprove,\n        onError: _onError,\n        onCancel: _onCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PricingPlan;\nPricingPlan.propTypes = {\n  detail: PropTypes.arrayOf(PropTypes.string).isRequired,\n  planFee: PropTypes.number.isRequired,\n  theme: PropTypes.oneOf(['purple', 'green', 'red']),\n  planId: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default PricingPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"PricingPlan\");","map":{"version":3,"sources":["C:/Users/AlliedC/source/repos/UI/src/Components/PricingPlan/components/PricingPlan.js"],"names":["PropTypes","Button","Image","PayPalScriptProvider","PayPalButtons","AudioImage","axios","Swal","PricingPlan","props","detail","planFee","theme","planId","id","_createSubscription","data","actions","subscription","create","plan_id","_onApprove","action","fire","post","userId","then","console","log","catch","alert","_onError","_onCancel","map","value","index","shape","color","layout","label","propTypes","arrayOf","string","isRequired","number","oneOf"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,yBAApD;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAO,sBAAP;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAAyCL,KAA/C;;AAEA,QAAMM,mBAAmB,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC3C,WAAOA,OAAO,CAACC,YAAR,CAAqBC,MAArB,CAA4B;AAC/BC,MAAAA,OAAO,EAAEP;AADsB,KAA5B,CAAP;AAGH,GAJD;;AAKA,QAAMQ,UAAU,GAAG,CAACL,IAAD,EAAOM,MAAP,KAAkB;AACjCf,IAAAA,IAAI,CAACgB,IAAL,CAAU,YAAV,EAAwB,8DAAxB,EAAwF,SAAxF;AACAjB,IAAAA,KAAK,CAACkB,IAAN,CAAW,8DAAX,EAA2E,EAAE,GAAGR,IAAL;AAAWS,MAAAA,MAAM,EAAEX;AAAnB,KAA3E,EACCY,IADD,CACMC,OAAO,CAACC,GADd,EAECC,KAFD,CAEOC,KAFP;AAGH,GALD;;AAMA,QAAMC,QAAQ,GAAG,CAACd,OAAD,EAAUD,IAAV,KAAmB;AAChCT,IAAAA,IAAI,CAACgB,IAAL,CAAU,sBAAV,EAAkC,wFAAlC,EAA4H,OAA5H;AACH,GAFD;;AAGA,QAAMS,SAAS,GAAG,CAACf,OAAD,EAAUD,IAAV,KAAmB;AACjCT,IAAAA,IAAI,CAACgB,IAAL,CAAU,UAAV,EAAsB,kFAAtB,EAA0G,OAA1G;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAElB,UAAZ;AAAwB,QAAA,GAAG,EAAC,aAA5B;AAA0C,QAAA,SAAS,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAG,qBAAoBO,KAAM,KAA3C;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBACKF,MAAM,CAACuB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBAAkB;AAAA,oBAAiBD;AAAjB,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBAA7B;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,wBAAMxB,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAUI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAGSE,MAAM,KAAK,MAAX,gBAAoB,QAAC,aAAD;AAAe,QAAA,aAAa,EAAC,MAA7B;AAAoC,QAAA,KAAK,EAAE;AAACuB,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,KAAK,EAAE,OAAvB;AAAgCC,UAAAA,MAAM,EAAE,UAAxC;AAAoDC,UAAAA,KAAK,EAAE;AAA3D,SAA3C;AACjB,QAAA,kBAAkB,EAAExB,mBADH;AAEjB,QAAA,SAAS,EAAEM,UAFM;AAGjB,QAAA,OAAO,EAAEU,QAHQ;AAIjB,QAAA,QAAQ,EAAEC;AAJO;AAAA;AAAA;AAAA;AAAA,cAApB,gBAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARb;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA5CD;;KAAMxB,W;AA6CNA,WAAW,CAACgC,SAAZ,GAAwB;AACpB9B,EAAAA,MAAM,EAAEV,SAAS,CAACyC,OAAV,CAAkBzC,SAAS,CAAC0C,MAA5B,EAAoCC,UADxB;AAEpBhC,EAAAA,OAAO,EAAEX,SAAS,CAAC4C,MAAV,CAAiBD,UAFN;AAGpB/B,EAAAA,KAAK,EAAEZ,SAAS,CAAC6C,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,CAAhB,CAHa;AAIpBhC,EAAAA,MAAM,EAAEb,SAAS,CAAC0C,MAAV,CAAiBC,UAJL;AAKpB7B,EAAAA,EAAE,EAAEd,SAAS,CAAC0C,MAAV,CAAiBC;AALD,CAAxB;AAOA,eAAenC,WAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Button, Image } from 'react-bootstrap'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport AudioImage from '../../../assets/img/audio.png'\r\nimport '../_pricingplan.scss'\r\nimport '../pricingplan.css'\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nconst PricingPlan = (props) => {\r\n    \r\n    const { detail, planFee, theme, planId, id } = props;\r\n   \r\n    const _createSubscription = (data, actions) => {\r\n        return actions.subscription.create({\r\n            plan_id: planId\r\n        })\r\n    }\r\n    const _onApprove = (data, action) => {\r\n        Swal.fire('Thank You!', 'You have successfully been subscribed to your selected plan.', 'success');\r\n        axios.post('https://localhost:7067/api/Subscription/saveUserSubscription', { ...data, userId: id })\r\n        .then(console.log)\r\n        .catch(alert)\r\n    } \r\n    const _onError = (actions, data) => {\r\n        Swal.fire('Subscription Failed!', 'You are not subscribed yet to a subscription plan. Please select a plan and try again.', 'error');\r\n    }\r\n    const _onCancel = (actions, data) => {\r\n        Swal.fire('Canceled', 'Subscription unexpectedly closed. Please try again to keep enjoying Dragon Camp.', 'error');\r\n    }\r\n    return (\r\n        <div className='pricingplan'>\r\n            <div className='pricingplan__head'>\r\n                <Image src={AudioImage} alt='pricingplan' className='fluid' />\r\n            </div>\r\n            <div className={`pricingplan__body ${theme}-bg`}>\r\n                <ul className='benifits'>\r\n                    {detail.map((value, index) => <li key={index}>{value}</li>)}\r\n                </ul>\r\n                <h3>${planFee}</h3>\r\n            </div>\r\n            <div className='pricingplan__btn'>\r\n                \r\n                {/* <PayPalScriptProvider options={{ \"client-id\": \"AcNswpTZpAkULNv6N91IaNLjYkjqhcD6cmK7eEvzltizyzKiYl3GHSxXgNW9uN53-1zadGGh0gUcMOf7\", intent: 'subscription', vault: true}}> */}\r\n                    {planId !== 'FREE' ? <PayPalButtons fundingSource=\"card\" style={{shape: 'pill', color: 'black', layout: 'vertical', label: 'subscribe' }}\r\n                        createSubscription={_createSubscription}\r\n                        onApprove={_onApprove}\r\n                        onError={_onError}\r\n                        onCancel={_onCancel}\r\n                    /> : <Button >Subscribe</Button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nPricingPlan.propTypes = {\r\n    detail: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    planFee: PropTypes.number.isRequired,\r\n    theme: PropTypes.oneOf(['purple', 'green', 'red']),\r\n    planId: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired\r\n}\r\nexport default PricingPlan"]},"metadata":{},"sourceType":"module"}